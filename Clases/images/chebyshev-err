#!/usr/bin/env python


import numpy
import scipy.interpolate, scipy.optimize
import matplotlib.pyplot as plt

def f(x):
    return 1 / (1 + 25 * x ** 2)

err = []
for n in range(2, 22, 2):
    cp = [numpy.cos((2 * j + 1) / (2 * n + 2) * numpy.pi)
	    for j in range(n + 1)]
    ip = scipy.interpolate.BarycentricInterpolator(
	    cp,
	    [f(x) for x in cp])
    res = [numpy.sqrt(-scipy.optimize.minimize_scalar(
                         lambda x: -(f(x) - ip(x))**2,
                         bracket = [cp[j], (cp[j] + cp[j + 1]) / 2, cp[j + 1]],
                         bounds = [cp[j + 1], cp[j]],
                         method = 'bounded').fun)
              for j in range(n // 2, n, 2)]
    err.append(max(res))

fig = plt.figure()
plt.bar(range(2, 22, 2), err,
        width = 1, edgecolor = "white", linewidth = 0.7)
fig.savefig('chebyshev-error.pdf')
