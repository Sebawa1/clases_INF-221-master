#!/usr/bin/env python


import numpy
import scipy.interpolate, scipy.optimize
import matplotlib.pyplot as plt

def f(x):
    return 1 / (1 + 25 * x ** 2)

err = []
for n in range(2, 22, 2):
    ip = scipy.interpolate.BarycentricInterpolator(
	    [-1 + 2 / n * i for i in range(n + 1)],
	    [f(-1 + 2 / n * i) for i in range(n + 1)])
    res = scipy.optimize.minimize_scalar(
	    lambda x: f(x) - ip(x) if n % 4 == 2 else ip(x) - f(x),
	    bounds = [1 - 2 / n, 1],
            method = 'bounded')
    err.append(-res.fun)

fig = plt.figure()
plt.bar(range(2, 22, 2), err,
        width = 1, edgecolor = "white", linewidth = 0.7)
fig.savefig('runge-error.pdf')
